{"version":3,"sources":["../../../../src/commands/eas-build/credentialsSync/action.ts"],"names":["credentialsSyncAction","projectDir","options","parent","nonInteractive","CommandError","update","platform","type","name","message","choices","title","value","BuildCommandPlatform","ANDROID","IOS","ALL","updateLocalCredentialsAsync","updateRemoteCredentialsAsync","ctx","Context","init","hasProjectContext","Error","includes","experienceName","manifest","owner","user","username","slug","SetupAndroidBuildCredentialsFromLocal","bundleIdentifier","appLookupParams","accountName","projectName","SetupIosBuildCredentialsFromLocal","credentialsJsonUpdateUtils","updateAndroidCredentialsAsync","updateIosCredentialsAsync"],"mappings":"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","sourcesContent":["import CommandError from '../../../CommandError';\nimport { Context } from '../../../credentials/context';\nimport * as credentialsJsonUpdateUtils from '../../../credentials/credentialsJson/update';\nimport { runCredentialsManager } from '../../../credentials/route';\nimport { SetupAndroidBuildCredentialsFromLocal } from '../../../credentials/views/SetupAndroidKeystore';\nimport { SetupIosBuildCredentialsFromLocal } from '../../../credentials/views/SetupIosBuildCredentials';\nimport log from '../../../log';\nimport prompts from '../../../prompts';\nimport { getBundleIdentifier } from '../build/utils/ios';\nimport { BuildCommandPlatform } from '../types';\n\ninterface Options {\n  parent: {\n    nonInteractive?: boolean;\n  };\n}\n\nexport default async function credentialsSyncAction(projectDir: string, options: Options) {\n  if (options.parent.nonInteractive) {\n    throw new CommandError('This command is not supported in --non-interactive mode');\n  }\n  const { update, platform } = await prompts([\n    {\n      type: 'select',\n      name: 'update',\n      message: 'What do you want to do?',\n      choices: [\n        {\n          title: 'Update credentials on the Expo servers with the local credentials.json contents',\n          value: 'remote',\n        },\n        {\n          title: 'Update or create local credentials.json with credentials from the Expo servers',\n          value: 'local',\n        },\n      ],\n    },\n    {\n      type: 'select',\n      name: 'platform',\n      message: 'Which platform would you like to update?',\n      choices: [\n        { title: 'Android', value: BuildCommandPlatform.ANDROID },\n        { title: 'iOS', value: BuildCommandPlatform.IOS },\n        { title: 'both', value: BuildCommandPlatform.ALL },\n      ],\n    },\n  ]);\n  if (update === 'local') {\n    await updateLocalCredentialsAsync(projectDir, platform);\n  } else {\n    await updateRemoteCredentialsAsync(projectDir, platform);\n  }\n}\n\nasync function updateRemoteCredentialsAsync(\n  projectDir: string,\n  platform: BuildCommandPlatform\n): Promise<void> {\n  const ctx = new Context();\n  await ctx.init(projectDir);\n  if (!ctx.hasProjectContext) {\n    throw new Error('project context is required'); // should be checked earlier\n  }\n  if ([BuildCommandPlatform.ALL, BuildCommandPlatform.ANDROID].includes(platform)) {\n    const experienceName = `@${ctx.manifest.owner || ctx.user.username}/${ctx.manifest.slug}`;\n    await runCredentialsManager(ctx, new SetupAndroidBuildCredentialsFromLocal(experienceName));\n  }\n  if ([BuildCommandPlatform.ALL, BuildCommandPlatform.IOS].includes(platform)) {\n    const bundleIdentifier = await getBundleIdentifier(projectDir, ctx.manifest);\n    const appLookupParams = {\n      accountName: ctx.manifest.owner ?? ctx.user.username,\n      projectName: ctx.manifest.slug,\n      bundleIdentifier,\n    };\n    await runCredentialsManager(ctx, new SetupIosBuildCredentialsFromLocal(appLookupParams));\n  }\n}\n\nexport async function updateLocalCredentialsAsync(\n  projectDir: string,\n  platform: BuildCommandPlatform\n): Promise<void> {\n  const ctx = new Context();\n  await ctx.init(projectDir);\n  if (!ctx.hasProjectContext) {\n    throw new Error('project context is required'); // should be checked earlier\n  }\n  if ([BuildCommandPlatform.ALL, BuildCommandPlatform.ANDROID].includes(platform)) {\n    log('Updating Android credentials in credentials.json');\n    await credentialsJsonUpdateUtils.updateAndroidCredentialsAsync(ctx);\n  }\n  if ([BuildCommandPlatform.ALL, BuildCommandPlatform.IOS].includes(platform)) {\n    const bundleIdentifier = await getBundleIdentifier(projectDir, ctx.manifest);\n    log('Updating iOS credentials in credentials.json');\n    await credentialsJsonUpdateUtils.updateIosCredentialsAsync(ctx, bundleIdentifier);\n  }\n}\n"],"file":"action.js"}